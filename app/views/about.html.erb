
<div class="w3-container" style="width: 60%; margin: 0 auto">

  <p>In the README.md file that accompanies this project repository I included some technical information about the
    installation and its requirements, and some useful commands for running and testing. However, that file didn't seem the place to include some
    information about why I chose those technologies. In case it could be relevant, here it is.
  </p>

  <p>Oh, about the design and front-end part of this web... well, the dog ate those skills from me so I tried to do my best here xD.</p>

  <h2 class="w3-border-bottom w3-border-light-grey w3-padding-16">Why Ruby?</h2>

  <p>Since the main programming language in Sketch is elixir I considered at first learning the language for the test (optimist they call me, don't know why).
    After some thought, though, I decided against it since most likely I would make more mistakes and it could prevent me
    to express myself comfortably. Thus, once Elixir was rule out the closer language among the ones I had practice with was... Ruby!
    I'm far from an expert in Ruby but at least I had half a year of experience with it in my previous job. So if anything it was still fresh.
  </p>

  <h2 class="w3-border-bottom w3-border-light-grey w3-padding-16">Why padrino?</h2>

  <p>The language was set and I was ready to go. I headed straight to the main task and finished a small command-line program.
    Yay! I went on with the bonus task aaaaand then the party started. I wasn't sure how to proceed: do I need to just render
    some graphics from the program? But that would require anyone to install some rendering framework for sure, no cool. Should I make
    a small web app? Wow, that escalated quickly. At this point I must confess... I ended up trying both. The first option was a
    huge pain (if only I had chosen Python...),  but the web app option seemed such an overkill, especially given that I only knew
    Rails as web app framework for Ruby. At that point I decided to ask for official confirmation and thus I learnt I was supposed to go for the app.
    But still... Rails would be like using a sledgehammer to crack a nut. I started searching for lightweight alternatives and I
    found padrino, and it looked great! It's a tiny, simple and yet full-stack Ruby framework, and with a nice documentation too.
    The problem? It hasn't being maintained that much in the last two years. Luckily, the only problem I had was some incompatibility issue
    with the later bundler versions but I could just downgrade and it worked smoothly from there. I really had much fun learning
    padrino, so it was totally worth it!
  </p>
</div>
